-- Game Validation
if game.PlaceId ~= 100902716985467 then
    warn("This script is not compatible with the current game.")
    return
end

-- Protect the script from being easily copied
local function isScriptModified()
    local signature = "univers_hub_bms"  -- Unique identifier for the script
    if _G.signature ~= signature then
        warn("Script has been tampered with!")
        return true
    end
    return false
end

-- Set a unique signature to protect the script from modification
_G.signature = "univers_hub_bms"

-- Check if the script is tampered with
if isScriptModified() then
    return
end

-- Current version and settings
local _V = "üåü UNIVERS Hub üåå | Bee Master Simulator üêù"

-- Load Rayfield Library
local _R = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create Main Window
local _W = _R:CreateWindow({
    Name = _V,
    LoadingTitle = "üåå Loading Univers Hub... üåå",
    LoadingSubtitle = "By üåü Univers Team üåå",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "UniversHubConfigs",
        FileName = "BeeMasterSimulator"
    },
    Discord = {
        Enabled = true,
        Invite = "PwbtqEDT", -- Add your community invite link here
        RememberJoins = true
    }
})

-- ========================= TABS ========================= --
-- Home Tab
local _homeTab = _W:CreateTab("üè† Home", nil)
_homeTab:CreateSection("Welcome to Univers Hub!")
_homeTab:CreateParagraph({
    Title = "üåü About",
    Content = "Univers Hub is designed to enhance your Bee Master Simulator experience with powerful and easy-to-use features."
})

-- Main Tab
local _mainTab = _W:CreateTab("üåü Main", nil)
_mainTab:CreateSection("Farm Features")

-- ========================= FARM SECTION ========================= --
local _E = {
    ["Spawn Hive Egg"] = "631f4d8de6bb46b7b8ec92a9738fd4b02"
}
local _selectedEggValue = nil
local _isAutoHatching = false

-- Egg Dropdown
_mainTab:CreateDropdown({
    Name = "Select Egg",
    Options = {"Spawn Hive Egg"},
    CurrentOption = nil,
    MultipleOptions = false,
    Flag = "Dropdown1",
    Callback = function(option)
        _selectedEggValue = _E[option]
        _R:Notify({
            Title = "Egg Selected",
            Content = "You selected: " .. option,
            Duration = 3
        })
    end
})

-- Auto Hatch Toggle
_mainTab:CreateToggle({
    Name = "Auto Hatch",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(value)
        _isAutoHatching = value
        _R:Notify({
            Title = "Auto Hatch",
            Content = _isAutoHatching and "Auto Hatch Enabled" or "Auto Hatch Disabled",
            Duration = 3
        })

        while _isAutoHatching do
            if _selectedEggValue then
                local _args = {
                    [1] = _selectedEggValue,
                    [2] = "open1",
                    [3] = {}
                }
                -- Ensure the ReplicatedStorage and Hatch Remote is correct
                local _hatchRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Hatch"):WaitForChild("EggHatch")
                if _hatchRemote then
                    _hatchRemote:InvokeServer(unpack(_args))
                end
            end
            task.wait(0.5) -- Prevent infinite loop crashes
        end
    end
})

-- ========================= MACHINES SECTION ========================= --
_mainTab:CreateSection("Machines")
_mainTab:CreateButton({
    Name = "Open Golden Machine",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.Shiny.Enabled = true
    end
})
_mainTab:CreateButton({
    Name = "Open Rainbow Machine",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.Rainbow.Enabled = true
    end
})
_mainTab:CreateButton({
    Name = "Open Combine Machine",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.Combine.Enabled = true
    end
})

-- ========================= OTHER FEATURES SECTION ========================= --
_mainTab:CreateSection("Other Features")
_mainTab:CreateButton({
    Name = "Open Upgrades",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.Upgrades.Enabled = true
    end
})
_mainTab:CreateButton({
    Name = "Open Staff Shop",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.StaffShop.Enabled = true
    end
})
_mainTab:CreateButton({
    Name = "Open Index",
    Callback = function()
        game:GetService("Players").LocalPlayer.PlayerGui.Index.Enabled = true
    end
})

-- ========================= MISCELLANEOUS SECTION ========================= --
local _miscTab = _W:CreateTab("üñáÔ∏è Miscellaneous", nil)
_miscTab:CreateSection("Player Tweaks")

-- Speed slider
_miscTab:CreateSlider({
    Name = "Speed Power",
    Range = {16, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "SpeedSlider",
    Callback = function(value)
        local _player = game.Players.LocalPlayer
        if _player and _player.Character and _player.Character:FindFirstChildOfClass("Humanoid") then
            _player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
})

-- Jump Power slider
_miscTab:CreateSlider({
    Name = "Jump Power",
    Range = {50, 300},
    Increment = 10,
    Suffix = "Power",
    CurrentValue = 100,
    Flag = "JumpSlider",
    Callback = function(value)
        local _player = game.Players.LocalPlayer
        if _player and _player.Character and _player.Character:FindFirstChildOfClass("Humanoid") then
            _player.Character:FindFirstChildOfClass("Humanoid").JumpPower = value
        end
    end
})

-- ========================= COMMUNITY TAB ========================= --
local _communityTab = _W:CreateTab("üéâ Community", nil)
_communityTab:CreateSection("Join Us")
_communityTab:CreateParagraph({
    Title = "Join the Univers Hub Community!",
    Content = "Click the button below to copy our Discord link to your clipboard."
})
_communityTab:CreateButton({
    Name = "Copy Discord Link",
    Callback = function()
        setclipboard("https://discord.gg/PwbtqEDT")
        _R:Notify({
            Title = "Link Copied!",
            Content = "Discord link has been copied to your clipboard.",
            Duration = 3
        })
    end
})

-- ========================= STATUS TAB ========================= --
local _statusTab = _W:CreateTab("üö¶ Status", nil)
_statusTab:CreateSection("Player Status")
_statusTab:CreateParagraph({
    Title = "Status",
    Content = "Coming soon: See your current stats and more here!"
})

-- ========================= NOTIFICATIONS ========================= --
_R:Notify({
    Title = "Script Loaded",
    Content = "Welcome to üåå Univers Hub üåå for Bee Master Simulator! üêù",
    Duration = 5,
    Image = 13047715178,
    Actions = {
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("User acknowledged notification.")
            end
        }
    }
})
